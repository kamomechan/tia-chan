[{"content":" 如果你没有时间，又想快速的搭建博客，可以使用 Hugo 静态页面生成器\n介绍 有哪些优点呢？\n文章使用 Markdown 格式\n相较于动态页面，访问速度快，占用低\n简单，快速部署\n给大家看看访问速度 \u0026gt;\u0026lt;\n安装 如果你没有 winget 包管理器可以先在 微软商店 安装\n利用 winget 安装 hugo\n1 winget install Hugo.Hugo.Extended 新建模板 右键桌面，选择在终端中打开\n1 hugo new site blog 切换目录\n1 cd blog\\themes 主题 在 hugo theme 中寻找你喜欢的主题\n找到后，点击 download 跳转到 github 仓库\n点击 Code 菜单栏，复制仓库地址\n克隆到 blog 文件夹的 themes 文件夹中\n1 git clone \u0026lt;仓库地址\u0026gt; 进入克隆好的文件夹，转到 exampleSite 文件夹，找到 content 文件夹和 config.yaml 文件，分别复制到 blog 文件夹下\n如遇到提示信息，选择替换目标中的文件\n最后删除 blog 文件夹下的 config.toml 文件\n使用与配置 运行Hugo 1 hugo server 打开地址：\n1 localhost:1313 如图，我这里使用的是hugo-theme-stack主题，需要配置自定义样式\n基础设置 在修改 blog 文件夹下的 config.yaml 文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 baseurl: https://example.com languageCode: en-us theme: hugo-theme-stack paginate: 5 title: Example Site copyright: Example Person languages: en: languageName: English title: Example Site weight: 1 params: description: Example description zh-cn: languageName: 中文 title: 演示站点 weight: 2 params: description: 演示说明 ar: languageName: عربي languagedirection: rtl title: موقع تجريبي weight: 3 params: description: وصف تجريبي DefaultContentLanguage: en baseurl 表示你的域名\nlanguageCode 可以修改为 zh-cn\ntitle 表示网站名称\ncopyright 表示网站名称\nlanguages 中可以看到三种语言，en、zh-cn、ar，删除两个你不需要的语言\nzh-cn 中的title表示侧边栏/网站的名称，weight表示语言所在的权重（由于删除了两种语言，建议改为1）\n修改后，如果你打开页面发现报错了，没关系，是因为你还没有设置默认内容语言（如下）\nDefaultContentLanguage 需要把语言改为 zh-cn\n修改头像 在 config.yaml 文件中我们可以看见下列代码\n1 2 3 4 5 6 7 sidebar: emoji: 🍥 subtitle: Lorem ipsum dolor sit amet, consectetur adipiscing elit. avatar: enabled: true local: true src: img/avatar.png 可以看出存放头像图片的路径是 blog\\assets\\img\\avatar.png\n修改一下就好啦\n如果不想要 emoji 可以删掉，subtitle 表示个性签名，你可以自定义\n修改关联社交账号 在 config.yaml 文件中我们可以看见下列代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 menu: main: [] social: - identifier: github name: GitHub url: https://github.com/CaiJimmy/hugo-theme-stack params: icon: brand-github - identifier: twitter name: Twitter url: https://twitter.com params: icon: brand-twitter identifier 表示id序列，随便写\nname 表示社交平台的名字\nurl 表示社交平台账户的名字\nicon 表示图标 （存储在 blog\\themes\\你的主题文件\\assets\\icons中）\n社交图标可以自定义，默认只有两个，你可以在 tablericons 找到你所需要的图标\n这里以邮箱图标为例（我才，才不会说举邮箱的例子是因为有点特殊呢！！），找到后，点击一下，显示 copied 就表示复制成功啦\n在 blog\\themes\\你的主题名称\\assets\\icons 中创建一个svg格式的文件，文件名随便你取，我取的是 brand-email.svg，把复制的东东，粘贴到文件中就可以啦\n1 2 3 4 5 identifier: email name: Email url: mailto:你的邮箱地址 params: icon: brand-email icon 中填写的是你刚刚创建svg文件所取的名字\n邮箱的url比较特殊，并不是直接填邮箱就可以了，需要在前面加上 mailto:\n创建文章 1 hugo new post\\你的文章名称\\index.md 创建的文件存放在 blog\\content\\post\\你的文章名称\\index.md 中\n打开 index.md 可以看到下图所示\n引入眼帘的，明显有一部分是代码块，下面是一片空白\n这里的代码块比较特殊，人们把它称为 front matter, 即文件的元信息\ntitle 表示文章名称\ndate 表示日期\ndraft 表示草稿，值为true表示在首页显示文章，false表示不显示（如果删去draft则表示显示）\n初始化的 front matter 默认包含这三部分，另外还有一些其他属性\n1 2 3 4 5 6 7 8 9 categories = [ \u0026#34;分类1\u0026#34;, \u0026#34;分类2\u0026#34; ] tags = [ \u0026#34;标签1\u0026#34;, \u0026#34;标签2\u0026#34; ] image = \u0026#34;1.jpg\u0026#34; 分别表示文章的分类，标签，封面\n注意：字符串前面的，是四个空格，有时候你可能会用tab键来表示四个空格，但在这里可能会出错，因为有些环境下tab键会表示8个空格\n空白处就可以用markdown语法编辑文章啦\n你可以一边编辑，一边看看网页的变化\n修改侧边栏索引 由于显示语言的不一致，需要修改一下\n打开 blog\\content\\page 路径，可以看见侧边栏索引所在的目录\n进入你需要修改的索引目录，把 index.md重命名为 index.zh-cn.md（已经有了index.zh-cn.md就不需要了）\n编辑 index.zh-cn.md文件中的front matter的title就可以修改侧边栏索引啦\n删除多余文章 删除 blog\\content\\post 路径中多余的文件夹就可以了\n修改关于页面 编辑 blog\\content\\page\\about\\index.zh-cn.md 文件\n修改链接页面 编辑 blog\\content\\page\\links\\index.zh-cn.md 文件\n删除 front matter 下方的内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 title: 链接 links: - title: GitHub description: GitHub is the world\u0026#39;s largest software development platform. website: https://github.com image: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png - title: TypeScript description: TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. website: https://www.typescriptlang.org image: ts-logo-128.jpg menu: main: weight: -50 params: icon: link comments: false links下的title 表示关联的网站标题（友情链接之类的）\ndescription 表示描述信息\nwebsite 表示站点地址\nimage 表示关联的网站图片链接\n生成静态页面 1 hugo 生成的静态页面存储在 public 文件夹中\n如果你没有服务器可以考虑把 public 中的静态页面部署到 github 之类的托管网站\n网上有很多这类的教程就不多说啦\n下一篇，将介绍如何把静态页面部署到 nginx 中\n完结撒花！！\nつずく\n","date":"2023-10-23T16:01:10+08:00","image":"https://tia-chan.top/p/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8-hugo-%E7%94%9F%E6%88%90%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/cover_hu8daf6273085b08b81c258b0111a25a4c_379546_120x120_fill_q75_box_smart1.jpg","permalink":"https://tia-chan.top/p/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8-hugo-%E7%94%9F%E6%88%90%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/","title":"如何利用 Hugo 生成静态页面"},{"content":"如果你对 RSS 有一定的了解，可以查看右边的索引，跳转到自己需要的地方唷\u0026gt;\u0026lt;\n什么是 RSS 呢 梦开始的地方\n简单来说，RSS就像是一个新闻订阅服务，用户可以通过订阅自己喜欢的网站的RSS源，获取这些网站的最新内容和更新，而无需每次都去访问这些网站。用户可以将订阅的RSS源集中在一个地方，方便浏览和阅\n读。 -ChatGPT\n如何使用 RSS 源 RSSHub 提供了一些公共RSS源，搜索自己喜欢的网站进行查找\n这里以月幕Gal RSS源为例：\n最后的最后，复制链接到RSS阅读器，点击添加订阅就可以啦w\nTwitter的RSS源可以看这篇：Nitter 403 的解决方案\n手机端RSS阅读器可以使用开源的 Feeder\n电脑端RSS阅读器可以使用开源的 Fluent Reader\n想要全平台同步可以使用公共Telegram机器人订阅RSS源，由于是公共的可能会有延迟，下面将会介绍如何部署一个自己的Telegram机器人wwww\n如何制作自己的 RSS 源 呜呜呜呜呜呜！找不到自己喜欢的RSS源怎么办，那当然是去RSSHub上提issues呀\n那人家也不理我怎么办qwq\n那就自己来做一个！利用huginn制作RSS源\n下载安装篇 在linux中安装docker 1 curl -fsSL get.docker.com -o get-docker.shsudo sh get-docker.sh --mirror Aliyun 启动docker容器（等待一分钟左右） 1 screen -S huginndocker run -it -p 3000:3000 ghcr.io/huginn/huginn 最后 ctrl+a+d 退出 screen\n在浏览器中打开Huginn http://localhost:3000\nlocalhost替换为你自己的ip，然后打开（如图）\n点击login，用户名与密码分别默认为admin与password\n设置账户 为保证账户安全，点击account菜单，选择account修改账户密码\n为Huginn使用做准备 准备 phantomjscloud Apikey 需要注册一个phantomjscloud账户，用来渲染动态网页成静态页面，注册好后从中获取ApiKey\n在Huginn中新建凭证（Credentials） 在Huginn中使用ApiKey\n如何使用Huginn 概述 一共分为4步：\n利用PhantomJs agent将动态网页转成静态网页 利用Website agent解析提取文章标题 利用Website agent解析提取文章内容 利用DataOutputAgent将解析的东西转成RSS源 将动态网页转成静态网页 这里以制作Keyfc论坛 RSS源为例\n点击新建代理（Agent）（没有说明的内容默认就行，不需要填写）\nUser agent：\n1 Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36 提取文章标题与时间 点击新建代理（Agent）（Website Agent类型）\n获取xpath路径可以用f12弹出控制台，然后点击选择元素，之后在页面中选择标题\n点击文章标题可以看见这个样子\n我们可以在控制台看见文章标题，右键选中，点击copy full xpath\n可以看见完整的xpath路径是这个样子的\n1 /html/body/div[4]/div[3]/div/div[3]/table/tbody[1]/tr/th/a[1] 由于不同文章的xpath路径有可能不同，所以我们需要对这个路径做一些修改(不然抓取的文章只有这一个)\n我们主要通过对比不同文章之间的xpath路径进行修改\n以相同方式，复制第二篇文章完整xpath路径，如下\n1 /html/body/div[4]/div[3]/div/div[3]/table/tbody[2]/tr/th/a[1] 方法：找不同，来删除 （快背，快背，考试要考的\u0026gt;\u0026lt;）\n通过对比，可以看见最后的部分不同，删除不同之处，可以得到下面的xpath\n1 /html/body/div[4]/div[3]/div/div[3]/table/tbody/tr/th/a[1] 那有的时候通过对比，没有不同之处怎么办呢？\n笨\u0026hellip;笨蛋！不修改不就行了嘛\n以相同的方式获取发布时间\n分别获取的第一篇与第二篇文章的发布时间\n1 2 /html/body/div[4]/div[3]/div/div[3]/table/tbody[1]/tr/td[3]/em /html/body/div[4]/div[3]/div/div[3]/table/tbody[2]/tr/td[3]/em 删除两者不同的地方，得到一下内容\n1 /html/body/div[4]/div[3]/div/div[3]/table/tbody/tr/td[3]/em 点击两次Dry Run运行下看看\n抓取成功啦，但是url有些问题，可以使用模板（template）使它们拼接起来\n1 \u0026#34;template\u0026#34;: { \u0026#34;url1\u0026#34;: \u0026#34;{{ url | to_uri: _response_.url }}\u0026#34; } 点击两次Dry Run运行下看看\n完成！\n提取文章内容 点击新建代理（Agent）（Website Agent类型）\n点击标题链接查看文章内容，并以相同方式获取xpath路径\n分别获取的第一篇与第二篇文章的内容xpath路径\n1 /html/body/div[4]/div[5]/div/form[1]/div/table[1]/tbody[1]/tr/td[2]/div[4]/div[2]/div/html/body/div[4]/div[5]/div/form[1]/div/table[1]/tbody[1]/tr/td[2]/div[4]/div[2]/div 通过对比没有不同之处，不需要修改\n完成！\n转成RSS源 点击actions菜单，选择show\n这个后缀为.xml的链接就是你做的RSS源啦（啪唧啪唧，鼓掌www）\n常见问题 如果遇到下面的working状态为no\n记得点击抓取标题的那个代理的event created（即keyfc 1）\n重新发送一个就好啦（记得不要发送相同的内容，不然会重复）\n部署 Telegram RSS Reader Bot 项目地址：Bot\n部署 下载安装篇 1 mkdir rssttcd rssttwget https://raw.githubusercontent.com/Rongronggg9/RSS-to-Telegram-Bot/dev/docker-compose.yml.sample -O docker-compose.yml 准备与配置 转向 @BotFather ，发送 /newbot 创建一个新的机器人，获取 token\n转向 @userinfobot 获取您的用户 ID（环境变量：）MANAGER。\n获取 Telegraph API 访问令牌（环境变量：）TELEGRAPH_TOKEN。每次获得新令牌时刷新页面。如果您有很多订阅，请确保获得至少 5 个代币。\n编辑 docker-compose.yml 文件，替换 token , MANAGER , TELEGRAPH_TOKEN\n1 vi docker-compose.yml 更新\n1 docker-compose up -d 完结撒花！！\n","date":"2023-10-22T12:54:54+08:00","image":"https://tia-chan.top/p/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA-rss-%E6%BA%90/cover_hubee0217edc81f386ea81541ec69b7714_1615958_120x120_fill_box_smart1_3.png","permalink":"https://tia-chan.top/p/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA-rss-%E6%BA%90/","title":"如何制作一个 RSS 源"},{"content":"更换实例 由于nitter.net截至现在已经不支持rss\n可以用https://twiiit.com/随机选择一个nitter实例替代\n比如：https://twiiit.com/nwsseveretstorm/rss\nSource：Link\n","date":"2023-10-22T12:50:29+08:00","image":"https://tia-chan.top/p/nitter-rss-403-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/1_hu93e3c99505f97409518dba68583bbc1c_478384_120x120_fill_q75_box_smart1.jpg","permalink":"https://tia-chan.top/p/nitter-rss-403-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","title":"Nitter Rss 403 的解决方案"},{"content":"报错信息： 1 error: externally-managed-environment 解决方案： 1 sudo mv /usr/lib/python3.11/EXTERNALLY-MANAGED /usr/lib/python3.11/EXTERNALLY-MANAGED.old 使用这个命令传递错误就可以啦！\n碎碎念 呜呜呜呜呜，一开始遇到这个错误，找到半天解决方案都不行！！被打\n最后在这里才找到办法www：link\n","date":"2023-10-22T12:46:19+08:00","image":"https://tia-chan.top/p/pip3-install-%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/1_huc95fec0b77e78bdb5b0cfe622ccf9469_3232201_120x120_fill_box_smart1_3.png","permalink":"https://tia-chan.top/p/pip3-install-%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","title":"pip3 install 报错的解决方案"},{"content":"Song(＾▽＾) そらたね まっすぐに羽を伸ばし 傷痕 愈し続けるたび\n我的双翼会一直张开 每当持续治疗之时\n私はそれでもいい 誰かの為に\n即便如此我也愿意 因为这是为了人们\n飛び立てることに もう少し 喜び感じでいたいから\n也因为我希望能稍微飞翔起来而感觉到高兴\nあなたとここで出会えたこと 奇跡と 呼ばせてください\n请你把我们的相遇称呼为奇迹\nOverthesky 遠くを見つめてる\n飞越天空 遥望远方\nその目に 光が指すように\n双眼如同指向光芒一样\nOpenthemind 世界を\n敞开心怀 世界必定能改变\nきっと変えてゆく そして 空へ\n然后再次飞向天空\n時々不安になる 私に何ができるのだろう\n有时候我会感觉到担心 我究竟能够做什么？\n時間は無限じゃない そんな中で\n时间并非无限 而我正在此间\n生きできた時間の中には 忘れたいこともあるけど\n在我所生活过的时光里有我很想忘却掉的痛苦经历\n誰かとは立ち会えるのなら 記憶は 輝き始める\n但如果能和谁一起分享我的经历 这份记忆将会开始闪闪发光\nOverthesky 全てが終わる時\n飞越天空 当一切结束后\nその手で 強く抱きしめて\n请用那双手紧紧拥抱着我\nOpenthemind 真実\n敞开心怀\n分かる日が来ても ずっと\n即使明白了真相 也要追寻永恒\n突然 見つけた希望\n突然找到的希望\n偶然 舞い降りできた夢\n偶然降落在了我们身上\nOverthesky 遠くを見つめてる\n飞越天空 遥望远方\nその目は 光に満ちでいる\n双眼充满了希望之光\nOpenthemind 世界をきっと変えてゆく そして\n敞开心怀 世界必定能改变 然后…\nOverthesky 遥かな物語\n飞越天空 追寻遥远的故事\nまだ見ぬ景色が呼んでる\n那里还有更多未知的景色呼唤着我们\nOpenthemind 世界に光が差すとき\n敞开心怀 当世界充满光芒的时候\n笑ってどこかで 見ているから\n我一定会微笑着在某处注视着你\nTHX ","date":"2023-10-22T11:27:07+08:00","image":"https://tia-chan.top/p/welcome/1_hu97a0851776278e5381a377448e0936e8_419392_120x120_fill_q75_box_smart1.jpg","permalink":"https://tia-chan.top/p/welcome/","title":"Welcome"}]